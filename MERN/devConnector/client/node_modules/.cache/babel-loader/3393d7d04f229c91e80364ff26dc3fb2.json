{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED, AUTH_ERROR } from './types';\nimport { setAlert } from './alert'; //LOAD USER\n\nexport const loadUser = () => async dispatch => {}; //Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/husseinnagri/Desktop/Frontend_Learning/ReactLearning/learningReact/javscriptLearning/MERN/devConnector/client/src/actions/auth.js"],"names":["axios","REGISTER_FAIL","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","setAlert","loadUser","dispatch","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,SALP;AAMA,SAASC,QAAT,QAAyB,SAAzB,C,CAGA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB,CAE/C,CAFM,C,CAOP;;AACA,OAAO,MAAMC,QAAQ,GACnB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KACE,MAAMJ,QAAN,IAAkB;AAChB,QAAMK,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAL,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEjB,gBADC;AAEPkB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAKD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAInB,QAAQ,CAACF,QAAQ,CAACqB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDpB,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAElB;AADC,KAAD,CAAR;AAGD;AAIF,CAjCE","sourcesContent":["import axios from 'axios';\nimport {\n  REGISTER_FAIL,\n  REGISTER_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR\n} from './types';\nimport { setAlert } from './alert'\n\n\n//LOAD USER\nexport const loadUser = () => async dispatch => {\n\n}\n\n\n\n\n//Register User\nexport const register =\n  ({ name, email, password }) =>\n    async dispatch => {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n\n      const body = JSON.stringify({ name, email, password });\n\n      try {\n        const res = await axios.post(\"/api/users\", body, config);\n\n        dispatch({\n          type: REGISTER_SUCCESS,\n          payload: res.data\n        });\n\n      } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n          type: REGISTER_FAIL\n        });\n      }\n\n\n\n    }"]},"metadata":{},"sourceType":"module"}