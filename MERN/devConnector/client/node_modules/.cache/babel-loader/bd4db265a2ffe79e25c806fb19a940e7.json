{"ast":null,"code":"//function that takes in state, and dispatches action\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state];\n    //we need all of the states already there, \n  }\n}","map":{"version":3,"sources":["/Users/husseinnagri/Desktop/Frontend_Learning/ReactLearning/learningReact/javscriptLearning/MERN/devConnector/client/src/reducers/alert.js"],"names":["SET_ALERT","REMOVE_ALERT","initialState","state","action","type"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC;AACA,MAAMC,YAAY,GAAG,EAArB;AAIA,eAAe,UAAUC,KAAK,GAAGD,YAAlB,EAAgCE,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,SAAL;AACE,aAAO,CAAC,GAAGG,KAAJ,CAAP;AAAmB;AAFvB;AAKD","sourcesContent":["//function that takes in state, and dispatches action\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types'\nconst initialState = [\n];\n\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state,] //we need all of the states already there, \n\n  }\n}"]},"metadata":{},"sourceType":"module"}